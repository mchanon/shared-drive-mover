{
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "project": ["./tsconfig.json"],
    "extraFileExtensions": [".svelte"]
  },
  "env": {
    "browser": true,
    "node": false
  },
  "plugins": [
    "deprecation",
    "jest",
    "prefer-arrow-functions",
    "simple-import-sort",
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:eslint-comments/recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:svelte/recommended",
    "plugin:prettier/recommended",
    "plugin:svelte/prettier"
  ],
  "rules": {
    "arrow-body-style": ["error", "as-needed"],
    "camelcase": "error",
    "no-warning-comments": "warn",
    "strict": ["error", "never"],
    "deprecation/deprecation": "warn",
    "eslint-comments/no-unused-disable": "error",
    "eslint-comments/require-description": [
      "error",
      {
        "ignore": ["eslint-enable", "eslint-env"]
      }
    ],
    "prefer-arrow-functions/prefer-arrow-functions": [
      "error",
      {
        "allowNamedFunctions": true
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "@typescript-eslint/array-type": ["error", { "default": "generic" }],
    "@typescript-eslint/class-methods-use-this": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/init-declarations": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/method-signature-style": ["error", "method"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow",
        "filter": {
          "regex": "^(Comments|Drives|Files|Replies)$",
          "match": false
        }
      },
      {
        "selector": "import",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": null,
        "custom": {
          "regex": "^(?:[A-Z][A-Za-z]*_?)?$",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-loop-func": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/parameter-properties": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/sort-type-constituents": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/typedef": "error",
    "@typescript-eslint/no-non-null-assertion": "off",
    "svelte/no-store-async": "error",
    "svelte/no-target-blank": "error",
    "svelte/block-lang": [
      "error",
      {
        "enforceScriptPresent": true,
        "script": "ts",
        "style": "scss"
      }
    ],
    "svelte/button-has-type": "error",
    "svelte/experimental-require-slot-types": "error",
    "svelte/experimental-require-strict-events": "error",
    "svelte/no-dom-manipulating": "error",
    "svelte/no-dupe-on-directives": "error",
    "svelte/no-dupe-use-directives": "error",
    "svelte/no-ignored-unsubscribe": "error",
    "svelte/no-reactive-functions": "error",
    "svelte/no-reactive-literals": "error",
    "svelte/no-useless-mustaches": "error",
    "svelte/prefer-destructured-store-props": "error",
    "svelte/require-event-dispatcher-types": "error",
    "svelte/require-optimized-style-attribute": "error",
    "svelte/require-store-callbacks-use-set-param": "error",
    "svelte/require-store-reactive-access": "error",
    "svelte/require-stores-init": "error",
    "svelte/derived-has-same-inputs-outputs": "error",
    "svelte/no-extra-reactive-curlies": "error",
    "svelte/no-immutable-reactive-statements": "error",
    "svelte/no-inline-styles": "error",
    "svelte/no-reactive-reassign": "error",
    "svelte/no-unused-class-name": [
      "error",
      {
        "allowedClassNames": ["mdc-typography--subtitle2"]
      }
    ],
    "svelte/prefer-class-directive": "error",
    "svelte/prefer-style-directive": "error",
    "svelte/require-each-key": "error",
    "svelte/sort-attributes": "error",
    "svelte/spaced-html-comment": "error",
    "svelte/valid-each-key": "error"
  },
  "settings": {
    "svelte": {
      "ignoreWarnings": [
        "@typescript-eslint/explicit-function-return-type"
      ]
    }
  },
  "overrides": [
    {
      "files": ["*.svelte"],
      "parser": "svelte-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser"
      },
      "rules": {
        "@typescript-eslint/init-declarations": "off"
      }
    },
    {
      "parserOptions": {
        "project": null
      },
      "files": [
        "gulpfile.mjs",
        "backend.webpack.config.js",
        "frontend.webpack.config.js",
        "test.frontend.webpack.config.js",
        ".eslintrc.js"
      ],
      "rules": {
        "deprecation/deprecation": "off",
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-array-delete": "off",
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-confusing-void-expression": "off",
        "@typescript-eslint/no-duplicate-type-constituents": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-implied-eval": "off",
        "@typescript-eslint/no-meaningless-void-operator": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/no-mixed-enums": "off",
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "@typescript-eslint/no-require-imports": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "off",
        "@typescript-eslint/no-unnecessary-condition": "off",
        "@typescript-eslint/no-unnecessary-qualifier": "off",
        "@typescript-eslint/no-unnecessary-type-arguments": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-useless-template-literals": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/non-nullable-type-assertion-style": "off",
        "@typescript-eslint/prefer-find": "off",
        "@typescript-eslint/prefer-includes": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/prefer-optional-chain": "off",
        "@typescript-eslint/prefer-promise-reject-errors": "off",
        "@typescript-eslint/prefer-readonly": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "off",
        "@typescript-eslint/prefer-regexp-exec": "off",
        "@typescript-eslint/prefer-return-this-type": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "off",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/require-array-sort-compare": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/return-await": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "off",
        "@typescript-eslint/unbound-method": "off"
      }
    },
    {
      "files": [
        "__tests__/**/*.test.ts",
        "__tests__/test-utils/gas-stubs.ts"
      ],
      "extends": ["plugin:jest/recommended", "plugin:jest/style"],
      "rules": {
        "jest/consistent-test-it": ["error", { "withinDescribe": "test" }],
        "jest/no-duplicate-hooks": "error",
        "jest/no-if": "error",
        "jest/no-test-return-statement": "error",
        "jest/prefer-called-with": "error",
        "jest/prefer-expect-assertions": [
          "error",
          {
            "onlyFunctionsWithAsyncKeyword": true,
            "onlyFunctionsWithExpectInLoop": true,
            "onlyFunctionsWithExpectInCallback": true
          }
        ],
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-hooks-on-top": "error",
        "jest/prefer-spy-on": "error",
        "jest/prefer-strict-equal": "error",
        "jest/require-hook": "error",
        "jest/require-to-throw-message": "error",
        "jest/unbound-method": "error"
      }
    },
    {
      "files": [
        "__tests__/frontend/*.ts",
        "__tests__/test-utils/stub-endpoints.ts"
      ],
      "extends": ["plugin:playwright/recommended"],
      "rules": {
        "playwright/no-nth-methods": "error",
        "playwright/no-raw-locators": "error",
        "playwright/prefer-strict-equal": "error",
        "playwright/prefer-to-be": "error",
        "playwright/prefer-to-contain": "error",
        "playwright/prefer-to-have-count": "error",
        "playwright/prefer-to-have-length": "error"
      }
    }
  ],
  "globals": {
    "google": "readonly"
  }
}
